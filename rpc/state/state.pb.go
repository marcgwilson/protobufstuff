// Code generated by protoc-gen-go. DO NOT EDIT.
// source: state.proto

package state

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CacheState consists of a mode and resource name.
type CacheState struct {
	Resource             string   `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Mode                 uint32   `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheState) Reset()         { *m = CacheState{} }
func (m *CacheState) String() string { return proto.CompactTextString(m) }
func (*CacheState) ProtoMessage()    {}
func (*CacheState) Descriptor() ([]byte, []int) {
	return fileDescriptor_a888679467bb7853, []int{0}
}

func (m *CacheState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheState.Unmarshal(m, b)
}
func (m *CacheState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheState.Marshal(b, m, deterministic)
}
func (m *CacheState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheState.Merge(m, src)
}
func (m *CacheState) XXX_Size() int {
	return xxx_messageInfo_CacheState.Size(m)
}
func (m *CacheState) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheState.DiscardUnknown(m)
}

var xxx_messageInfo_CacheState proto.InternalMessageInfo

func (m *CacheState) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *CacheState) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

// The response message containing the greetings
type CacheStateResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheStateResponse) Reset()         { *m = CacheStateResponse{} }
func (m *CacheStateResponse) String() string { return proto.CompactTextString(m) }
func (*CacheStateResponse) ProtoMessage()    {}
func (*CacheStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a888679467bb7853, []int{1}
}

func (m *CacheStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheStateResponse.Unmarshal(m, b)
}
func (m *CacheStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheStateResponse.Marshal(b, m, deterministic)
}
func (m *CacheStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheStateResponse.Merge(m, src)
}
func (m *CacheStateResponse) XXX_Size() int {
	return xxx_messageInfo_CacheStateResponse.Size(m)
}
func (m *CacheStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CacheStateResponse proto.InternalMessageInfo

func (m *CacheStateResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*CacheState)(nil), "state.CacheState")
	proto.RegisterType((*CacheStateResponse)(nil), "state.CacheStateResponse")
}

func init() { proto.RegisterFile("state.proto", fileDescriptor_a888679467bb7853) }

var fileDescriptor_a888679467bb7853 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xbb, 0xe2, 0x9f, 0x3a, 0x92, 0x43, 0x47, 0x91, 0x18, 0x2f, 0x25, 0xa7, 0x5e, 0x9c,
	0x82, 0x5e, 0x0b, 0x42, 0x45, 0xf4, 0x58, 0x92, 0x4f, 0x90, 0xae, 0x63, 0x23, 0x58, 0x77, 0xd9,
	0x99, 0x08, 0x7e, 0x0d, 0x3f, 0xb1, 0x64, 0x43, 0x8c, 0x92, 0xdb, 0xbe, 0xb7, 0xef, 0xfd, 0x76,
	0x1f, 0x9c, 0x89, 0x56, 0xca, 0xe4, 0x83, 0x53, 0x87, 0x47, 0x51, 0x64, 0xd7, 0x3b, 0xe7, 0x76,
	0xef, 0xbc, 0x8c, 0xe6, 0xb6, 0x79, 0x5d, 0xf2, 0xde, 0xeb, 0x57, 0x97, 0xc9, 0x57, 0x00, 0x0f,
	0x95, 0xad, 0xb9, 0x6c, 0xa3, 0x98, 0xc1, 0x34, 0xb0, 0xb8, 0x26, 0x58, 0x4e, 0xcd, 0xdc, 0x2c,
	0x4e, 0x8b, 0x5f, 0x8d, 0x08, 0x87, 0x7b, 0xf7, 0xc2, 0xe9, 0xc1, 0xdc, 0x2c, 0x92, 0x22, 0x9e,
	0x73, 0x02, 0x1c, 0xda, 0x05, 0x8b, 0x77, 0x1f, 0xc2, 0x98, 0xc2, 0x89, 0x34, 0xd6, 0xb2, 0x48,
	0x84, 0x4c, 0x8b, 0x5e, 0xde, 0x7e, 0x1b, 0x98, 0x0d, 0x85, 0x92, 0xc3, 0xe7, 0x9b, 0x65, 0xbc,
	0x87, 0xa4, 0x64, 0xfd, 0xf3, 0x8d, 0x19, 0x75, 0x33, 0x06, 0x2b, 0xbb, 0x1a, 0x59, 0xfd, 0x73,
	0xf9, 0x04, 0x57, 0x90, 0x3c, 0xfd, 0x03, 0x5c, 0x52, 0xb7, 0x99, 0xfa, 0xcd, 0xf4, 0xd8, 0x6e,
	0xce, 0xc6, 0xe0, 0x7c, 0xb2, 0xbe, 0x81, 0x0b, 0x6e, 0x7c, 0x1d, 0x2a, 0x25, 0x16, 0xaa, 0x55,
	0xbd, 0x6d, 0xaf, 0xd7, 0xe7, 0xcf, 0xaa, 0x7e, 0x48, 0x6e, 0x5a, 0xd4, 0xc6, 0x6c, 0x8f, 0x23,
	0xf3, 0xee, 0x27, 0x00, 0x00, 0xff, 0xff, 0xd8, 0xa1, 0xfb, 0xee, 0x6b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CacheStateServiceClient is the client API for CacheStateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheStateServiceClient interface {
	// Sends a greeting
	SetCacheState(ctx context.Context, in *CacheState, opts ...grpc.CallOption) (*CacheStateResponse, error)
	GetCacheState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CacheState, error)
}

type cacheStateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCacheStateServiceClient(cc *grpc.ClientConn) CacheStateServiceClient {
	return &cacheStateServiceClient{cc}
}

func (c *cacheStateServiceClient) SetCacheState(ctx context.Context, in *CacheState, opts ...grpc.CallOption) (*CacheStateResponse, error) {
	out := new(CacheStateResponse)
	err := c.cc.Invoke(ctx, "/state.CacheStateService/SetCacheState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheStateServiceClient) GetCacheState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CacheState, error) {
	out := new(CacheState)
	err := c.cc.Invoke(ctx, "/state.CacheStateService/GetCacheState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CacheStateServiceServer is the server API for CacheStateService service.
type CacheStateServiceServer interface {
	// Sends a greeting
	SetCacheState(context.Context, *CacheState) (*CacheStateResponse, error)
	GetCacheState(context.Context, *empty.Empty) (*CacheState, error)
}

// UnimplementedCacheStateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCacheStateServiceServer struct {
}

func (*UnimplementedCacheStateServiceServer) SetCacheState(ctx context.Context, req *CacheState) (*CacheStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCacheState not implemented")
}
func (*UnimplementedCacheStateServiceServer) GetCacheState(ctx context.Context, req *empty.Empty) (*CacheState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCacheState not implemented")
}

func RegisterCacheStateServiceServer(s *grpc.Server, srv CacheStateServiceServer) {
	s.RegisterService(&_CacheStateService_serviceDesc, srv)
}

func _CacheStateService_SetCacheState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheStateServiceServer).SetCacheState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/state.CacheStateService/SetCacheState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheStateServiceServer).SetCacheState(ctx, req.(*CacheState))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheStateService_GetCacheState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheStateServiceServer).GetCacheState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/state.CacheStateService/GetCacheState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheStateServiceServer).GetCacheState(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _CacheStateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "state.CacheStateService",
	HandlerType: (*CacheStateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetCacheState",
			Handler:    _CacheStateService_SetCacheState_Handler,
		},
		{
			MethodName: "GetCacheState",
			Handler:    _CacheStateService_GetCacheState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "state.proto",
}
